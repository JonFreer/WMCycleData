name: Run tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      DB_USERNAME: gh_db_un
      DB_PASSWORD: gh_db_pw
      API_DB_USERNAME: gh_api_un
      API_DB_PASSWORD: gh_api_pw
      SESSION_SECRET: gh_secret
      EXTERNAL_API_TOKEN: gh_token
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup env
        run: |
          echo "PROJECT_ROOT=${GITHUB_WORKSPACE}" >> $GITHUB_ENV
          echo "PROJECT_NAME=combine" >> $GITHUB_ENV
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - name: Start docker containers
        run: |
          echo "VERSION=$(versioninfo)" >> $GITHUB_ENV
          docker compose -f docker-compose-test.yaml build 
          docker compose -f docker-compose-test.yaml up --detach db 
          sleep 10  # wait for database to be ready
        #   docker-compose -f tests-docker-compose.yml run backend bash -c "rails db:create && rails db:migrate && rails db:seed"

      - name: Run backend unit and integration tests
        run: |
          docker compose -f docker-compose-test.yaml up api
  buildAndRun:
    runs-on: ubuntu-latest
    env:
        RAILS_ENV: test
        DB_USERNAME: gh_db_un
        DB_PASSWORD: gh_db_pw
        API_DB_USERNAME: gh_api_un
        API_DB_PASSWORD: gh_api_pw
        SESSION_SECRET: gh_secret
        EXTERNAL_API_TOKEN: gh_token
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker containers
        run: |
            docker compose -f docker-compose.yaml -f docker-compose.dev.yaml build

      - name: RUN docker containers
        run: |
            docker compose -f docker-compose.yaml -f docker-compose.dev.yaml up -d
            sleep 20
            docker compose -f docker-compose.yaml -f docker-compose.dev.yaml stop
          
