version: '3'

services:
  db:
    container_name: cc_db
    # image: timescale/timescaledb:latest-pg15
    build: ./timescale
    restart: unless-stopped
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      API_DB: "api"
      API_DB_USER: "${API_DB_USERNAME}"
      API_DB_PASSWORD: "${API_DB_PASSWORD}"
    volumes:
      - "./data/timescaledb:/var/lib/postgresql/data"
      - ./timescale:/docker-entrypoint-initdb.d
    networks:
      - internal_network

  web:
    build:
      context: ./web
      # target: prod
      args:
        REACT_APP_HOST: ${DOMAIN:-cyclecounter.co.uk}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.cc_web.loadbalancer.server.port=80"
      - "traefik.http.routers.cc_web.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.cc_web.rule=Host(`${DOMAIN:-cyclecounter.localhost}`)"
      - "traefik.http.routers.cc_web.tls=true"
    networks:
      - traefik_web

  api:

    build:
      context: ./api
      # target: prod
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cc_api.tls=true"
      - "traefik.http.routers.cc_api.tls.certresolver=letsEncrypt"
      -  "traefik.http.services.cc_api.loadbalancer.server.port=80"
      - "traefik.http.routers.cc_api.rule=Host(`${DOMAIN:-cyclecounter.localhost}`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.strip_api.stripprefix.prefixes=/api"
      - "traefik.http.routers.cc_api.middlewares=strip_api"
      - "ofelia.enabled=true"
      - "ofelia.job-exec.datecron.schedule=@every 1h"
      - "ofelia.job-exec.datecron.command=sh schedule_scripts/hourly_load.sh"
    environment:
      DOMAIN: "${DOMAIN:-cyclecounter.localhost}"
      DATABASE_URL: "postgresql://${API_DB_USERNAME}:${API_DB_PASSWORD}@cc_db/api"
      SESSION_SECRET: "${SESSION_SECRET}"
      VIVACITY_KEY: "${VIVACITY_KEY}"
      EXTERNAL_API_TOKEN: "${EXTERNAL_API_TOKEN}"
    networks:
      - traefik_web
      - internal_network

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - api    
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "./data/ofelia:/log"
    labels:
        ofelia.save-folder: "/log"
        ofelia.save-only-on-error: "false"

networks:
  traefik_web:
    external:
      true
  internal_network:
    internal: true

# volumes:
#   db_data: